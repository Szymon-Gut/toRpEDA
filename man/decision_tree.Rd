% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decision_tree.R
\name{decision_tree}
\alias{decision_tree}
\title{decision_tree`()` Builds decision tree on given data. Returns metrics for the tree and optionally plots the tree.}
\usage{
decision_tree(
  df,
  target = NULL,
  variables = colnames(df),
  classification = TRUE,
  showplot = TRUE,
  maxdepth = 10,
  minsplit = 20,
  cp = 0.01,
  xval = 5,
  seed = 44
)
}
\arguments{
\item{df}{Data frame.}

\item{target}{Column name which values function predicts. By default the last column}

\item{variables}{column names of given dataframe to process. By default all colnames of dataframe.}

\item{classification}{If `TRUE`, function builds classification tree, builds regression tree otherwise.
If building regression tree and target column is not numeric, casting the column to numeric values.
`TRUE` by default.}

\item{showplot}{If `TRUE` displays decision tree with plot function from rpart.plot package. By default `TRUE`}

\item{maxdepth}{Maximum depth of decision tree. Default value is `10`}

\item{minsplit}{The minimum number of observations that must exist in a node in order for a split to be attempted. Default value is `20`}

\item{cp}{Complexity parameter. Any split that does not decrease the overall lack of fit by a factor of cp is not attempted.
The main role of this parameter is to save computing time by pruning off splits that are obviously not worthwhile.
Essentially, the user informs the program that any split which does not improve the fit by cp will likely be pruned off by cross-validation,
and that hence the program need not pursue it.
Default value is `0.01`}

\item{xval}{Number of cross-validation. Default value is `5`}

\item{seed}{Random seed, provides repeatability for the tree output. By default `44`}
}
\value{
returns a list with calculated metrics for the given predictions and support - number of observations in test and train dataset.
These dataframes are splitted using `sample.int` function, using 70/30 proportion.
Calculated metrics are:, for classification problem  accuracy and balanced accuracy, for regression - RMSE.
}
\description{
decision_tree`()` Builds decision tree on given data. Returns metrics for the tree and optionally plots the tree.
}
\examples{
library("toRpEDA")
decision_tree(iris, target = "Species")
decision_tree(USArrests, classification = FALSE)

}
